/**
 * generated by Xtext 2.34.0
 */
package ld.project2.thymioDSL.impl;

import ld.project2.thymioDSL.Sensor;
import ld.project2.thymioDSL.ThymioDSLPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sensor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ld.project2.thymioDSL.impl.SensorImpl#getBottomLeftSensor <em>Bottom Left Sensor</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.SensorImpl#getBottomRightSensor <em>Bottom Right Sensor</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.SensorImpl#getNorthWest <em>North West</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.SensorImpl#getNorthNorthWest <em>North North West</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.SensorImpl#getNorth <em>North</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.SensorImpl#getNorthNorthEast <em>North North East</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.SensorImpl#getNorthEast <em>North East</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SensorImpl extends MinimalEObjectImpl.Container implements Sensor
{
  /**
   * The default value of the '{@link #getBottomLeftSensor() <em>Bottom Left Sensor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBottomLeftSensor()
   * @generated
   * @ordered
   */
  protected static final String BOTTOM_LEFT_SENSOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBottomLeftSensor() <em>Bottom Left Sensor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBottomLeftSensor()
   * @generated
   * @ordered
   */
  protected String bottomLeftSensor = BOTTOM_LEFT_SENSOR_EDEFAULT;

  /**
   * The default value of the '{@link #getBottomRightSensor() <em>Bottom Right Sensor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBottomRightSensor()
   * @generated
   * @ordered
   */
  protected static final String BOTTOM_RIGHT_SENSOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBottomRightSensor() <em>Bottom Right Sensor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBottomRightSensor()
   * @generated
   * @ordered
   */
  protected String bottomRightSensor = BOTTOM_RIGHT_SENSOR_EDEFAULT;

  /**
   * The default value of the '{@link #getNorthWest() <em>North West</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorthWest()
   * @generated
   * @ordered
   */
  protected static final String NORTH_WEST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNorthWest() <em>North West</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorthWest()
   * @generated
   * @ordered
   */
  protected String northWest = NORTH_WEST_EDEFAULT;

  /**
   * The default value of the '{@link #getNorthNorthWest() <em>North North West</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorthNorthWest()
   * @generated
   * @ordered
   */
  protected static final String NORTH_NORTH_WEST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNorthNorthWest() <em>North North West</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorthNorthWest()
   * @generated
   * @ordered
   */
  protected String northNorthWest = NORTH_NORTH_WEST_EDEFAULT;

  /**
   * The default value of the '{@link #getNorth() <em>North</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorth()
   * @generated
   * @ordered
   */
  protected static final String NORTH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNorth() <em>North</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorth()
   * @generated
   * @ordered
   */
  protected String north = NORTH_EDEFAULT;

  /**
   * The default value of the '{@link #getNorthNorthEast() <em>North North East</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorthNorthEast()
   * @generated
   * @ordered
   */
  protected static final String NORTH_NORTH_EAST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNorthNorthEast() <em>North North East</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorthNorthEast()
   * @generated
   * @ordered
   */
  protected String northNorthEast = NORTH_NORTH_EAST_EDEFAULT;

  /**
   * The default value of the '{@link #getNorthEast() <em>North East</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorthEast()
   * @generated
   * @ordered
   */
  protected static final String NORTH_EAST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNorthEast() <em>North East</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNorthEast()
   * @generated
   * @ordered
   */
  protected String northEast = NORTH_EAST_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SensorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ThymioDSLPackage.Literals.SENSOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBottomLeftSensor()
  {
    return bottomLeftSensor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBottomLeftSensor(String newBottomLeftSensor)
  {
    String oldBottomLeftSensor = bottomLeftSensor;
    bottomLeftSensor = newBottomLeftSensor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.SENSOR__BOTTOM_LEFT_SENSOR, oldBottomLeftSensor, bottomLeftSensor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBottomRightSensor()
  {
    return bottomRightSensor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBottomRightSensor(String newBottomRightSensor)
  {
    String oldBottomRightSensor = bottomRightSensor;
    bottomRightSensor = newBottomRightSensor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.SENSOR__BOTTOM_RIGHT_SENSOR, oldBottomRightSensor, bottomRightSensor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNorthWest()
  {
    return northWest;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNorthWest(String newNorthWest)
  {
    String oldNorthWest = northWest;
    northWest = newNorthWest;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.SENSOR__NORTH_WEST, oldNorthWest, northWest));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNorthNorthWest()
  {
    return northNorthWest;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNorthNorthWest(String newNorthNorthWest)
  {
    String oldNorthNorthWest = northNorthWest;
    northNorthWest = newNorthNorthWest;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.SENSOR__NORTH_NORTH_WEST, oldNorthNorthWest, northNorthWest));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNorth()
  {
    return north;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNorth(String newNorth)
  {
    String oldNorth = north;
    north = newNorth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.SENSOR__NORTH, oldNorth, north));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNorthNorthEast()
  {
    return northNorthEast;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNorthNorthEast(String newNorthNorthEast)
  {
    String oldNorthNorthEast = northNorthEast;
    northNorthEast = newNorthNorthEast;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.SENSOR__NORTH_NORTH_EAST, oldNorthNorthEast, northNorthEast));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNorthEast()
  {
    return northEast;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNorthEast(String newNorthEast)
  {
    String oldNorthEast = northEast;
    northEast = newNorthEast;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.SENSOR__NORTH_EAST, oldNorthEast, northEast));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ThymioDSLPackage.SENSOR__BOTTOM_LEFT_SENSOR:
        return getBottomLeftSensor();
      case ThymioDSLPackage.SENSOR__BOTTOM_RIGHT_SENSOR:
        return getBottomRightSensor();
      case ThymioDSLPackage.SENSOR__NORTH_WEST:
        return getNorthWest();
      case ThymioDSLPackage.SENSOR__NORTH_NORTH_WEST:
        return getNorthNorthWest();
      case ThymioDSLPackage.SENSOR__NORTH:
        return getNorth();
      case ThymioDSLPackage.SENSOR__NORTH_NORTH_EAST:
        return getNorthNorthEast();
      case ThymioDSLPackage.SENSOR__NORTH_EAST:
        return getNorthEast();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ThymioDSLPackage.SENSOR__BOTTOM_LEFT_SENSOR:
        setBottomLeftSensor((String)newValue);
        return;
      case ThymioDSLPackage.SENSOR__BOTTOM_RIGHT_SENSOR:
        setBottomRightSensor((String)newValue);
        return;
      case ThymioDSLPackage.SENSOR__NORTH_WEST:
        setNorthWest((String)newValue);
        return;
      case ThymioDSLPackage.SENSOR__NORTH_NORTH_WEST:
        setNorthNorthWest((String)newValue);
        return;
      case ThymioDSLPackage.SENSOR__NORTH:
        setNorth((String)newValue);
        return;
      case ThymioDSLPackage.SENSOR__NORTH_NORTH_EAST:
        setNorthNorthEast((String)newValue);
        return;
      case ThymioDSLPackage.SENSOR__NORTH_EAST:
        setNorthEast((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ThymioDSLPackage.SENSOR__BOTTOM_LEFT_SENSOR:
        setBottomLeftSensor(BOTTOM_LEFT_SENSOR_EDEFAULT);
        return;
      case ThymioDSLPackage.SENSOR__BOTTOM_RIGHT_SENSOR:
        setBottomRightSensor(BOTTOM_RIGHT_SENSOR_EDEFAULT);
        return;
      case ThymioDSLPackage.SENSOR__NORTH_WEST:
        setNorthWest(NORTH_WEST_EDEFAULT);
        return;
      case ThymioDSLPackage.SENSOR__NORTH_NORTH_WEST:
        setNorthNorthWest(NORTH_NORTH_WEST_EDEFAULT);
        return;
      case ThymioDSLPackage.SENSOR__NORTH:
        setNorth(NORTH_EDEFAULT);
        return;
      case ThymioDSLPackage.SENSOR__NORTH_NORTH_EAST:
        setNorthNorthEast(NORTH_NORTH_EAST_EDEFAULT);
        return;
      case ThymioDSLPackage.SENSOR__NORTH_EAST:
        setNorthEast(NORTH_EAST_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ThymioDSLPackage.SENSOR__BOTTOM_LEFT_SENSOR:
        return BOTTOM_LEFT_SENSOR_EDEFAULT == null ? bottomLeftSensor != null : !BOTTOM_LEFT_SENSOR_EDEFAULT.equals(bottomLeftSensor);
      case ThymioDSLPackage.SENSOR__BOTTOM_RIGHT_SENSOR:
        return BOTTOM_RIGHT_SENSOR_EDEFAULT == null ? bottomRightSensor != null : !BOTTOM_RIGHT_SENSOR_EDEFAULT.equals(bottomRightSensor);
      case ThymioDSLPackage.SENSOR__NORTH_WEST:
        return NORTH_WEST_EDEFAULT == null ? northWest != null : !NORTH_WEST_EDEFAULT.equals(northWest);
      case ThymioDSLPackage.SENSOR__NORTH_NORTH_WEST:
        return NORTH_NORTH_WEST_EDEFAULT == null ? northNorthWest != null : !NORTH_NORTH_WEST_EDEFAULT.equals(northNorthWest);
      case ThymioDSLPackage.SENSOR__NORTH:
        return NORTH_EDEFAULT == null ? north != null : !NORTH_EDEFAULT.equals(north);
      case ThymioDSLPackage.SENSOR__NORTH_NORTH_EAST:
        return NORTH_NORTH_EAST_EDEFAULT == null ? northNorthEast != null : !NORTH_NORTH_EAST_EDEFAULT.equals(northNorthEast);
      case ThymioDSLPackage.SENSOR__NORTH_EAST:
        return NORTH_EAST_EDEFAULT == null ? northEast != null : !NORTH_EAST_EDEFAULT.equals(northEast);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (bottomLeftSensor: ");
    result.append(bottomLeftSensor);
    result.append(", bottomRightSensor: ");
    result.append(bottomRightSensor);
    result.append(", northWest: ");
    result.append(northWest);
    result.append(", northNorthWest: ");
    result.append(northNorthWest);
    result.append(", north: ");
    result.append(north);
    result.append(", northNorthEast: ");
    result.append(northNorthEast);
    result.append(", northEast: ");
    result.append(northEast);
    result.append(')');
    return result.toString();
  }

} //SensorImpl
