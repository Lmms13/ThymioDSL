/**
 * generated by Xtext 2.34.0
 */
package ld.project2.thymioDSL.impl;

import java.util.Collection;

import ld.project2.thymioDSL.Action;
import ld.project2.thymioDSL.Lights;
import ld.project2.thymioDSL.Motors;
import ld.project2.thymioDSL.Sound;
import ld.project2.thymioDSL.ThymioDSLPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Action</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ld.project2.thymioDSL.impl.ActionImpl#getMove <em>Move</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.ActionImpl#getLight <em>Light</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.ActionImpl#getSound <em>Sound</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ActionImpl extends MinimalEObjectImpl.Container implements Action
{
  /**
	 * The cached value of the '{@link #getMove() <em>Move</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getMove()
	 * @generated
	 * @ordered
	 */
  protected Motors move;

  /**
	 * The cached value of the '{@link #getLight() <em>Light</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getLight()
	 * @generated
	 * @ordered
	 */
  protected Lights light;

  /**
	 * The cached value of the '{@link #getSound() <em>Sound</em>}' containment reference list.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getSound()
	 * @generated
	 * @ordered
	 */
  protected EList<Sound> sound;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ActionImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return ThymioDSLPackage.Literals.ACTION;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Motors getMove()
  {
		return move;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetMove(Motors newMove, NotificationChain msgs)
  {
		Motors oldMove = move;
		move = newMove;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.ACTION__MOVE, oldMove, newMove);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setMove(Motors newMove)
  {
		if (newMove != move) {
			NotificationChain msgs = null;
			if (move != null)
				msgs = ((InternalEObject)move).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ThymioDSLPackage.ACTION__MOVE, null, msgs);
			if (newMove != null)
				msgs = ((InternalEObject)newMove).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ThymioDSLPackage.ACTION__MOVE, null, msgs);
			msgs = basicSetMove(newMove, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.ACTION__MOVE, newMove, newMove));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Lights getLight()
  {
		return light;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetLight(Lights newLight, NotificationChain msgs)
  {
		Lights oldLight = light;
		light = newLight;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.ACTION__LIGHT, oldLight, newLight);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setLight(Lights newLight)
  {
		if (newLight != light) {
			NotificationChain msgs = null;
			if (light != null)
				msgs = ((InternalEObject)light).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ThymioDSLPackage.ACTION__LIGHT, null, msgs);
			if (newLight != null)
				msgs = ((InternalEObject)newLight).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ThymioDSLPackage.ACTION__LIGHT, null, msgs);
			msgs = basicSetLight(newLight, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.ACTION__LIGHT, newLight, newLight));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public EList<Sound> getSound()
  {
		if (sound == null) {
			sound = new EObjectContainmentEList<Sound>(Sound.class, this, ThymioDSLPackage.ACTION__SOUND);
		}
		return sound;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case ThymioDSLPackage.ACTION__MOVE:
				return basicSetMove(null, msgs);
			case ThymioDSLPackage.ACTION__LIGHT:
				return basicSetLight(null, msgs);
			case ThymioDSLPackage.ACTION__SOUND:
				return ((InternalEList<?>)getSound()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case ThymioDSLPackage.ACTION__MOVE:
				return getMove();
			case ThymioDSLPackage.ACTION__LIGHT:
				return getLight();
			case ThymioDSLPackage.ACTION__SOUND:
				return getSound();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case ThymioDSLPackage.ACTION__MOVE:
				setMove((Motors)newValue);
				return;
			case ThymioDSLPackage.ACTION__LIGHT:
				setLight((Lights)newValue);
				return;
			case ThymioDSLPackage.ACTION__SOUND:
				getSound().clear();
				getSound().addAll((Collection<? extends Sound>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case ThymioDSLPackage.ACTION__MOVE:
				setMove((Motors)null);
				return;
			case ThymioDSLPackage.ACTION__LIGHT:
				setLight((Lights)null);
				return;
			case ThymioDSLPackage.ACTION__SOUND:
				getSound().clear();
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case ThymioDSLPackage.ACTION__MOVE:
				return move != null;
			case ThymioDSLPackage.ACTION__LIGHT:
				return light != null;
			case ThymioDSLPackage.ACTION__SOUND:
				return sound != null && !sound.isEmpty();
		}
		return super.eIsSet(featureID);
	}

} //ActionImpl
