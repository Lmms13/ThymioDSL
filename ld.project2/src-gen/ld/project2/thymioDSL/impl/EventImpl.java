/**
 * generated by Xtext 2.34.0
 */
package ld.project2.thymioDSL.impl;

import java.util.Collection;

import ld.project2.thymioDSL.BottomSensor;
import ld.project2.thymioDSL.Event;
import ld.project2.thymioDSL.ProxSensor;
import ld.project2.thymioDSL.ThymioDSLPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Event</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ld.project2.thymioDSL.impl.EventImpl#getButton <em>Button</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.EventImpl#isTap <em>Tap</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.EventImpl#isMic <em>Mic</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.EventImpl#getProxSensor <em>Prox Sensor</em>}</li>
 *   <li>{@link ld.project2.thymioDSL.impl.EventImpl#getBottomSensor <em>Bottom Sensor</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EventImpl extends MinimalEObjectImpl.Container implements Event
{
  /**
	 * The default value of the '{@link #getButton() <em>Button</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getButton()
	 * @generated
	 * @ordered
	 */
  protected static final String BUTTON_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getButton() <em>Button</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getButton()
	 * @generated
	 * @ordered
	 */
  protected String button = BUTTON_EDEFAULT;

  /**
	 * The default value of the '{@link #isTap() <em>Tap</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #isTap()
	 * @generated
	 * @ordered
	 */
  protected static final boolean TAP_EDEFAULT = false;

  /**
	 * The cached value of the '{@link #isTap() <em>Tap</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #isTap()
	 * @generated
	 * @ordered
	 */
  protected boolean tap = TAP_EDEFAULT;

  /**
	 * The default value of the '{@link #isMic() <em>Mic</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #isMic()
	 * @generated
	 * @ordered
	 */
  protected static final boolean MIC_EDEFAULT = false;

  /**
	 * The cached value of the '{@link #isMic() <em>Mic</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #isMic()
	 * @generated
	 * @ordered
	 */
  protected boolean mic = MIC_EDEFAULT;

  /**
	 * The cached value of the '{@link #getProxSensor() <em>Prox Sensor</em>}' containment reference list.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getProxSensor()
	 * @generated
	 * @ordered
	 */
  protected EList<ProxSensor> proxSensor;

  /**
	 * The cached value of the '{@link #getBottomSensor() <em>Bottom Sensor</em>}' containment reference list.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getBottomSensor()
	 * @generated
	 * @ordered
	 */
  protected EList<BottomSensor> bottomSensor;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected EventImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return ThymioDSLPackage.Literals.EVENT;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getButton()
  {
		return button;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setButton(String newButton)
  {
		String oldButton = button;
		button = newButton;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.EVENT__BUTTON, oldButton, button));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean isTap()
  {
		return tap;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setTap(boolean newTap)
  {
		boolean oldTap = tap;
		tap = newTap;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.EVENT__TAP, oldTap, tap));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean isMic()
  {
		return mic;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setMic(boolean newMic)
  {
		boolean oldMic = mic;
		mic = newMic;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ThymioDSLPackage.EVENT__MIC, oldMic, mic));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public EList<ProxSensor> getProxSensor()
  {
		if (proxSensor == null) {
			proxSensor = new EObjectContainmentEList<ProxSensor>(ProxSensor.class, this, ThymioDSLPackage.EVENT__PROX_SENSOR);
		}
		return proxSensor;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public EList<BottomSensor> getBottomSensor()
  {
		if (bottomSensor == null) {
			bottomSensor = new EObjectContainmentEList<BottomSensor>(BottomSensor.class, this, ThymioDSLPackage.EVENT__BOTTOM_SENSOR);
		}
		return bottomSensor;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case ThymioDSLPackage.EVENT__PROX_SENSOR:
				return ((InternalEList<?>)getProxSensor()).basicRemove(otherEnd, msgs);
			case ThymioDSLPackage.EVENT__BOTTOM_SENSOR:
				return ((InternalEList<?>)getBottomSensor()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case ThymioDSLPackage.EVENT__BUTTON:
				return getButton();
			case ThymioDSLPackage.EVENT__TAP:
				return isTap();
			case ThymioDSLPackage.EVENT__MIC:
				return isMic();
			case ThymioDSLPackage.EVENT__PROX_SENSOR:
				return getProxSensor();
			case ThymioDSLPackage.EVENT__BOTTOM_SENSOR:
				return getBottomSensor();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case ThymioDSLPackage.EVENT__BUTTON:
				setButton((String)newValue);
				return;
			case ThymioDSLPackage.EVENT__TAP:
				setTap((Boolean)newValue);
				return;
			case ThymioDSLPackage.EVENT__MIC:
				setMic((Boolean)newValue);
				return;
			case ThymioDSLPackage.EVENT__PROX_SENSOR:
				getProxSensor().clear();
				getProxSensor().addAll((Collection<? extends ProxSensor>)newValue);
				return;
			case ThymioDSLPackage.EVENT__BOTTOM_SENSOR:
				getBottomSensor().clear();
				getBottomSensor().addAll((Collection<? extends BottomSensor>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case ThymioDSLPackage.EVENT__BUTTON:
				setButton(BUTTON_EDEFAULT);
				return;
			case ThymioDSLPackage.EVENT__TAP:
				setTap(TAP_EDEFAULT);
				return;
			case ThymioDSLPackage.EVENT__MIC:
				setMic(MIC_EDEFAULT);
				return;
			case ThymioDSLPackage.EVENT__PROX_SENSOR:
				getProxSensor().clear();
				return;
			case ThymioDSLPackage.EVENT__BOTTOM_SENSOR:
				getBottomSensor().clear();
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case ThymioDSLPackage.EVENT__BUTTON:
				return BUTTON_EDEFAULT == null ? button != null : !BUTTON_EDEFAULT.equals(button);
			case ThymioDSLPackage.EVENT__TAP:
				return tap != TAP_EDEFAULT;
			case ThymioDSLPackage.EVENT__MIC:
				return mic != MIC_EDEFAULT;
			case ThymioDSLPackage.EVENT__PROX_SENSOR:
				return proxSensor != null && !proxSensor.isEmpty();
			case ThymioDSLPackage.EVENT__BOTTOM_SENSOR:
				return bottomSensor != null && !bottomSensor.isEmpty();
		}
		return super.eIsSet(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String toString()
  {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (button: ");
		result.append(button);
		result.append(", tap: ");
		result.append(tap);
		result.append(", mic: ");
		result.append(mic);
		result.append(')');
		return result.toString();
	}

} //EventImpl
