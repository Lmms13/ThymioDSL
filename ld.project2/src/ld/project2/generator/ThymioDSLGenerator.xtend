/*
 * generated by Xtext 2.34.0
 */
package ld.project2.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import ld.project2.thymioDSL.Model
import ld.project2.validation.ThymioDSLValidator;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class ThymioDSLGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		fsa.generateFile('my_procedures.aesl',
			generateCode(resource.contents.head as Model)
		)
	}
	
	def generateCode(Model m){
		'''
		<!DOCTYPE aesl-source>
		<network>
		<node>
		var notes[6]
		var durations[6]
		var note_index = 6
		var note_count = 6
		var wave[142]
		var i
		var wave_phase
		var wave_intensity
		
		# compute a sinus wave for sound
		for i in 0:141 do
			wave_phase = (i-70)*468
			call math.cos(wave_intensity, wave_phase)
			wave[i] = wave_intensity/256
		end
		call sound.wave(wave)
		# setup threshold for detecting claps
		mic.threshold = 250
		# reset outputs
		call sound.system(-1)
		call leds.top(0,0,0)
		call leds.bottom.left(0,0,0)
		call leds.bottom.right(0,0,0)
		call leds.circle(0,0,0,0,0,0,0,0)
		
		# when a note is finished, play the next note
		onevent sound.finished
			if note_index != note_count then
				call sound.freq(notes[note_index], durations[note_index])
				note_index += 1
			end
			
		<toolsPlugins>
		<ThymioVisualProgramming>
		<vplroot xml-format-version="1">
		<program advanced_mode="0">
		
		«FOR p : m.procedures»
			<set>
			«IF p.events.button !== null»
				<block type="event" name="button" value0="«p.events.button.equals("up")?1:0»" value1="«p.events.button.equals("left")?1:0»" value2="«p.events.button.equals("down")?1:0»" value3="«p.events.button.equals("right")?1:0»" value4="«p.events.button.equals("center")?1:0»"/>
			«ENDIF»
			«IF p.events.stimulus !== null»
				<block type="event" name="«p.events.stimulus.equals("tap")?"acc":"clap"»"/>
			«ENDIF»		
			«IF p.events.proxSensor !== null»
				<block type="event" name="prox" value0="«p.events.proxSensor.frontLeftSensor !== null?p.events.proxSensor.frontLeftSensor.equals("far")?0:p.events.proxSensor.frontLeftSensor.equals("very_close")?1:2:0»" value1="«p.events.proxSensor.frontCenterLeftSensor !== null?p.events.proxSensor.frontCenterLeftSensor.equals("far")?0:p.events.proxSensor.frontCenterLeftSensor.equals("very_close")?1:2:0»" value2="«p.events.proxSensor.frontCenterSensor !== null?p.events.proxSensor.frontCenterSensor.equals("far")?0:p.events.proxSensor.frontCenterSensor.equals("very_close")?1:2:0»" value3="«p.events.proxSensor.frontCenterRightSensor !== null?p.events.proxSensor.frontCenterRightSensor.equals("far")?0:p.events.proxSensor.frontCenterRightSensor.equals("very_close")?1:2:0»" value4="«p.events.proxSensor.frontRightSensor !== null?p.events.proxSensor.frontRightSensor.equals("far")?0:p.events.proxSensor.frontRightSensor.equals("very_close")?1:2:0»" value5="«p.events.proxSensor.backLeftSensor !== null?p.events.proxSensor.backLeftSensor.equals("far")?0:p.events.proxSensor.backLeftSensor.equals("very_close")?1:2:0»" value6="«p.events.proxSensor.backRightSensor !== null?p.events.proxSensor.backRightSensor.equals("far")?0:p.events.proxSensor.backRightSensor.equals("very_close")?1:2:0»" value7="1000" value8="2000"/>
			«ENDIF»
			«IF p.events.bottomSensor !== null»
				<block type="event" name="proxground" value0="«p.events.bottomSensor.bottomLeftSensor.equals("any")?0:p.events.bottomSensor.bottomLeftSensor.equals("white")?1:2»" value1="«p.events.bottomSensor.bottomRightSensor.equals("any")?0:p.events.bottomSensor.bottomRightSensor.equals("white")?1:2»" value2="400" value3="450"/>
			«ENDIF»
			«FOR a : p.actions»
				«IF a.move !== null»
					<block type="action" name="move" value0="«new ThymioDSLValidator().evaluateExpression(a.move.left)»" value1="«new ThymioDSLValidator().evaluateExpression(a.move.right)»"/>
				«ENDIF»
				«IF a.light !== null»
					«IF a.light.topLight !== null»
						<block type="action" name="colortop" value0="«new ThymioDSLValidator().evaluateExpression(a.light.topLight.red)»" value1="«new ThymioDSLValidator().evaluateExpression(a.light.topLight.green)»" value2="«new ThymioDSLValidator().evaluateExpression(a.light.topLight.blue)»"/>
					«ELSE»
						<block type="action" name="colortop" value0="0" value1="0" value2="0"/>
					«ENDIF»
					«IF a.light.bottomLight !== null»
						<block type="action" name="colorbottom" value0="«new ThymioDSLValidator().evaluateExpression(a.light.bottomLight.red)»" value1="«new ThymioDSLValidator().evaluateExpression(a.light.bottomLight.green)»" value2="«new ThymioDSLValidator().evaluateExpression(a.light.bottomLight.blue)»"/>
					«ELSE»
						<block type="action" name="colorbottom" value0="0" value1="0" value2="0"/>
					«ENDIF»
				«ENDIF»
				«IF !a.sound.isEmpty»
					<block type="action" name="sound" value0="«new ThymioDSLValidator().evaluateExpression(a.sound.get(0).pitch)==0?517:a.sound.get(0).duration.equals("short")?new ThymioDSLValidator().evaluateExpression(a.sound.get(0).pitch) + 255:new ThymioDSLValidator().evaluateExpression(a.sound.get(0).pitch) + 511»" value1="«a.sound.size >= 2?new ThymioDSLValidator().evaluateExpression(a.sound.get(1).pitch)==0?517:a.sound.get(1).duration.equals("short")?new ThymioDSLValidator().evaluateExpression(a.sound.get(1).pitch) + 255:new ThymioDSLValidator().evaluateExpression(a.sound.get(1).pitch) + 511:517»" value2="«a.sound.size >= 3?new ThymioDSLValidator().evaluateExpression(a.sound.get(2).pitch)==0?517:a.sound.get(2).duration.equals("short")?new ThymioDSLValidator().evaluateExpression(a.sound.get(2).pitch) + 255:new ThymioDSLValidator().evaluateExpression(a.sound.get(2).pitch) + 511:517»" value3="«a.sound.size >= 4?new ThymioDSLValidator().evaluateExpression(a.sound.get(3).pitch)==0?517:a.sound.get(3).duration.equals("short")?new ThymioDSLValidator().evaluateExpression(a.sound.get(3).pitch) + 255:new ThymioDSLValidator().evaluateExpression(a.sound.get(3).pitch) + 511:517»" value4="«a.sound.size >= 5?new ThymioDSLValidator().evaluateExpression(a.sound.get(4).pitch)==0?517:a.sound.get(4).duration.equals("short")?new ThymioDSLValidator().evaluateExpression(a.sound.get(4).pitch) + 255:new ThymioDSLValidator().evaluateExpression(a.sound.get(4).pitch) + 511:517»" value5="«a.sound.size >= 6?new ThymioDSLValidator().evaluateExpression(a.sound.get(5).pitch)==0?517:a.sound.get(5).duration.equals("short")?new ThymioDSLValidator().evaluateExpression(a.sound.get(5).pitch) + 255:new ThymioDSLValidator().evaluateExpression(a.sound.get(5).pitch) + 511:517»"/>
				«ENDIF»
			«ENDFOR»
			</set>
		«ENDFOR»	
		
		<set/>
		</program>
		</vplroot>
		</ThymioVisualProgramming>
		</toolsPlugins>
		</node>
		</network>
		'''
	}
	

}
